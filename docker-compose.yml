version: '3.8'

services:
  server:
    depends_on: 
      - database
    build:
      context: .
    env_file:
      - .env
    container_name: gpa-calculator-server
    hostname: gpa-calculator-server
    networks:
      - mynet
    ports:
      - 8080:8080
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - ./:/app
  database:
    image: postgres:alpine
    container_name: gpa-calculator-database
    networks:
      - mynet
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data
  migrate:
    image: migrate/migrate:latest
    profiles: ["tools"]
    networks:
      - mynet
    volumes:
      - ./migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      - database 
  testsuite:
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile.test
    networks:
      - mynet
    depends_on:
      - database
    volumes:
      - .:/app
volumes:
  data:

networks:
  mynet:
    driver: bridge